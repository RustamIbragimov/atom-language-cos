{
  "name": "source.udl",
  "scopeName": "Cache Object Script",
  "fileTypes": ["cls", "mac"],
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#directives"
    },
    {
      "include": "#statements"
    },
    {
      "include": "text.xml"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "begin": "\\s*\\/\\/\\/",
          "end": "$",
          "name": "comment.line.character.udl",
          "patterns": [
            {
              "include": "text.xml"
            }
          ]
        },
        {
          "begin": "\\s*\\/\\/",
          "end": "$",
          "name": "comment.line.double-slash.udl",
          "patterns": [
            {
              "include": "text.xml"
            }
          ]
        },
        {
          "begin": "\\s*#;",
          "end": "$",
          "name": "comment.line.number.udl",
          "patterns": [
            {
              "include": "text.xml"
            }
          ]
        },
        {
          "begin": "\\/\\*",
          "end": "\\*\\/",
          "name": "comment.block.documentation.udl",
          "patterns": [
            {
              "include": "text.xml"
            }
          ]
        },
        {
          "begin": ";",
          "end": "$",
          "name": "comment.line.semicolon.udl",
          "patterns": [
            {
              "include": "text.xml"
            }
          ]
        }
      ]
    },
    "directives": {
      "patterns": [
        {
          "include": "#include-directives"
        },
        {
          "include": "#define-directives"
        }
      ]
    },
    "include-directives": {
      "begin": "\\s*(?i)(#?include)\\s*",
      "beginCaptures": {
        "1": {
          "name": "keyword.other.include.udl"
        }
      },
      "end": "$",
      "patterns": [
        {
          "include": "#dotted-attrs"
        }
      ]
    },
    "define-directives": {
      "patterns": [
        {
          "begin": "^\\s*(?i)(#define)\\s*",
          "beginCaptures": {
            "1": {
              "name": "keyword.other.define.udl"
            }
          },
          "end": "$",
          "patterns": [
            {
              "match": "[a-zA-Z0-9%\\(\\)+\\-*=]+",
              "name": "constant.other.macros.udl"
            }
          ]
        },
        {
          "begin": "^\\s*(?i)(#ifdef)\\s*(\\w+)",
          "beginCaptures": {
            "1": {
              "name": "keyword.other.ifdef.udl"
            },
            "2": {
              "name": "constant.other.ifdef.udl"
            }
          },
          "end": "$"
        },
        {
          "match": "^\\s*(?i)(#else|#endif)",
          "captures": {
            "1": {
              "name": "keyword.other.else-endif.udl"
            }
          }
        },
        {
          "begin": "^\\s*(?i)(#dim)\\s*([\\w,]+)",
          "beginCaptures": {
            "1": {
              "name": "keyword.other.dim.udl"
            },
            "2": {
              "name": "variable.other.udl"
            }
          },
          "end": "$",
          "patterns": [
            {
              "match": "=\\s*(\\w+)",
              "name": "entity.name.variable.equals.udl"
            },
            {
              "match": "(?i)\\b(as)\\b\\s*\\b(list|array)\\b\\s*\\b(of)\\b\\s*\\b(\\w+)\\b",
              "captures": {
                "1": {
                  "name": "keyword.operator.as.udl"
                },
                "2": {
                  "name": "entity.name.variable.list-array.udl"
                },
                "3": {
                  "name": "keyword.operator.of.udl"
                },
                "4": {
                  "name": "entity.name.variable.udl"
                }
              }
            },
            {
              "match": "(?i)\\b(as)\\b\\s*\\b(\\w+)\\b",
              "captures": {
                "1": {
                  "name": "keyword.operator.as.udl"
                },
                "2": {
                  "name" : "entity.name.variable.udl"
                }
              }
            }
          ]
        }
      ]
    },
    "dotted-attrs": {
      "match": "((%|\\w|\\.|#)+)",
      "captures": {
        "1": {
          "name": "variable.language.udl"
        }
      }
    },
    "statements": {
      "patterns": [
        {
          "include": "#properties"
        },
        {
          "include": "#parameters"
        },
        {
          "include": "#indices"
        },
        {
          "include": "#fks"
        },
        {
          "include": "#classes"
        },
        {
          "include": "#methods"
        },
        {
          "include": "#xml-data"
        },
        {
          "include": "#keywords"
        },
        {
          "include": "#variables"
        }
      ]
    },
    "properties": {
      "begin": "^\\s*(?i)(Property)\\s+(\\w+)",
      "beginCaptures": {
        "1": {
          "name": "entity.name.type.property.udl"
        },
        "2": {
          "name": "variable.other.udl"
        }
      },
      "end": "$",
      "patterns": [
        {
          "include": "#as-keywords"
        },
        {
          "include": "#dotted-attrs"
        }
      ]
    },
    "parameters": {
      "begin": "^\\s*(?i)(Parameter)\\s+(\\w+)",
      "beginCaptures": {
        "1": {
          "name": "entity.name.type.property.udl"
        },
        "2": {
          "name": "variable.other.udl"
        }
      },
      "end": "$",
      "patterns": [
        {
          "include": "#as-keywords"
        },
        {
          "include": "#dotted-attrs"
        }
      ]
    },
    "indices": {
      "begin": "^\\s*(?i)(Index)\\s+(\\w+)",
      "beginCaptures": {
        "1": {
          "name": "entity.name.type.property.udl"
        },
        "2": {
          "name": "variable.other.udl"
        }
      },
      "end": "$",
      "patterns": [
        {
          "match": "\\b(?i)(ON)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.on.udl"
            }
          }
        },
        {
          "include": "#dotted-attrs"
        }
      ]
    },
    "fks": {
      "begin": "^\\s*(?i)(Relationship)\\s+(\\w+)",
      "beginCaptures": {
        "1": {
          "name": "entity.name.type.property.udl"
        },
        "2": {
          "name": "variable.other.udl"
        }
      },
      "end": "$",
      "patterns": [
        {
          "include": "#as-keywords"
        },
        {
          "include": "#dotted-attrs"
        }
      ]
    },
    "as-keywords": {
      "match": "\\b(?i)(As)\\b",
      "captures": {
        "1": {
          "name": "keyword.operator.as.udl"
        }
      }
    },
    "classes": {
      "begin": "^\\s*(?i)(Class)\\s+(\\w+)",
      "beginCaptures": {
        "1": {
          "name": "entity.name.type.property.udl"
        },
        "2": {
          "name": "variable.other.udl"
        }
      },
      "end": "$",
      "patterns": [
        {
          "match": "\\b(?i)(Extends)\\b",
          "captures": {
            "1": {
              "name": "keyword.operator.extends.udl"
            }
          }
        },
        {
          "include": "#dotted-attrs"
        },
        {
          "begin": "\\{",
          "end": "\\}",
          "patterns": [
            {
              "include": "#statements"
            }
          ]
        }
      ]
    },
    "methods": {
      "begin": "^\\s*(?i)(Method|ClassMethod|ClientMethod)\\s+(\\w+)",
      "beginCaptures": {
        "1": {
          "name": "entity.name.type.property.udl"
        },
        "2": {
          "name": "variable.other.udl"
        }
      },
      "end": "$",
      "patterns": [
        {
          "include": "#method-params"
        },
        {
          "include": "#as-keywords"
        },
        {
          "include": "#dotted-attrs"
        },
        {
          "begin": "\\{",
          "end": "\\}",
          "patterns": [
            {
              "include": "#statements"
            }
          ]
        }
      ]
    },
    "method-params": {
      "begin": "\\(",
      "end": "\\)",
      "patterns": [
        {
          "match": "(\\w+)\\s*(As)\\s*((\\w|%|\\.)+)\\s*=\\s*([\\w\\{\\}\\$]+)",
          "captures": {
            "1": {
              "name": "variable.parameter.method-param.udl"
            },
            "2": {
              "name": "keyword.operator.as-method-param.udl"
            },
            "3": {
              "name": "storage.type.method.udl"
            },
            "5": {
              "name": "entity.name.variable.equals.udl"
            }
          }
        },
        {
          "match": "(\\w+)\\s*(As)\\s*((\\w|%|\\.)+)",
          "captures": {
            "1": {
              "name": "variable.parameter.method-param.udl"
            },
            "2": {
              "name": "keyword.operator.as-method-param.udl"
            },
            "3": {
              "name": "storage.type.method.udl"
            }
          }
        },
        {
          "match": "(\\w+)",
          "captures": {
            "1": {
              "name": "variable.parameter.method-param.udl"
            }
          }
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "include": "#action-keywords"
        },
        {
          "include": "#control-keywords"
        },
        {
          "include": "#system-functions"
        },
        {
          "include": "#keyword-operator-logical"
        },
        {
          "include": "#sql-keyword"
        },
        {
          "include": "#class-keyword"
        }
      ]
    },
    "keyword-operator-logical": {
      "match": "(&&|&|!|'|\\|\\|)",
      "captures": {
        "1": {
          "name": "keyword.operator.logical.udl"
        }
      }
    },
    "action-keywords": {
      "match": "(?i)\\b(SET|S|DO|D|KILL|K|GOTO|G|READ|R|WRITE|W|OPEN|O|USE|U|CLOSE|C|CONTINUE|FOR|F|HALT|HANG|H|JOB|J|LOCK|L|MERGE|M|NEW|N|QUIT|Q|RETURN|RET|TSTART|TS|TCOMMIT|TC|TROLLBACK|TR|THROW|VIEW|V|XECUTE|X|ZKILL|ZK|ZNSPACE|ZN|ZTRAP|ZWRITE|ZW|ZZDUMP|ZZWRITE)\\b",
      "captures": {
        "1": {
          "name": "keyword.operator.action.udl"
        }
      }
    },
    "control-keywords": {
      "match": "(?i)\\b(if|i|while|for|f|try|catch|else|e|elseif)\\b",
      "captures": {
        "1": {
          "name": "keyword.control.udl"
        }
      }
    },
    "system-functions": {
      "match": "\\.%\\w+",
      "name": "entity.name.function.system.udl"
    },
    "sql-keyword": {
      "begin": "(&sql)\\(",
      "beginCaptures": {
        "1": {
          "name": "entity.name.function.sql.udl"
        }
      },
      "end": "\\)",
      "patterns": [
        {
          "include": "#expressions"
        }
      ]
    },
    "class-keyword": {
      "match": "(##class)\\(((%|\\w|\\.|#)+)\\)",
      "captures": {
        "1": {
          "name": "entity.name.class.reference.udl"
        },
        "2": {
          "name": "variable.parameter.function-argument.udl"
        }
      }
    },
    "function-exec": {
      "match": "\\)\\.(\\w+)",
      "captures": {
        "1": {
          "name": "entity.name.function.ordinary.udl"
        }
      },
      "comment": "TODO: doesn't work"
    },
    "variables": {
      "patterns": [
        {
          "match": "\\.\\.\\w+",
          "name": "variable.other.property.udl"
        },
        {
          "match": "\\.\\.#\\w+",
          "name": "variable.other.parameter.udl"
        },
        {
          "match": "\\^\\w+",
          "name": "variable.other.global.udl"
        },
        {
          "match": "\\$\\w+(\\.\\w+)*",
          "name": "variable.other.system.udl"
        },
        {
          "match": "\\$\\$\\$\\w+",
          "name": "variable.other.macros.udl"
        },
        {
          "include": "#strings"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "begin": "(\")",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.string.begin.udl"
            }
          },
          "end": "(\")",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.string.end.udl"
            }
          },
          "name": "string.quoted.double.udl"
        }
      ]
    },
    "xml-data": {
      "patterns": [
        {
          "match": "^\\s*(?i)(XData|Storage)\\s+(\\w+)",
          "captures": {
            "1": {
              "name": "storage.type.xdata.udl"
            },
            "2": {
              "name": "variable.other.udl"
            }
          }
        }
      ]
    },
    "expressions": {
      "patterns": [
        {
          "begin": "\\(",
          "end": "\\)",
          "patterns": [
            {
              "include": "#expressions"
            }
          ]
        },
        {
          "include": "source.sql"
        },
        {
          "include": "source.js"
        }
      ]
    }
  }
}
